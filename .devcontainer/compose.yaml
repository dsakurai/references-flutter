version: "3.9"

services:
  db:
    image: docker.io/library/mariadb:latest
    restart: unless-stopped
    environment:
      - MARIADB_ROOT_PASSWORD=devroot
      - MARIADB_DATABASE=appdb
      - MARIADB_USER=appuser
      - MARIADB_PASSWORD=devpass
    # volumes:
    #   - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -u root -p$MARIADB_ROOT_PASSWORD || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - devnet

  dev:
    build:
      # context: "/home/daisuke/work/projects/references-flutter/.devcontainer"
      context: "${WORKSPACE}/.devcontainer"
      dockerfile: Dockerfile
    userns_mode: keep-id

    # Podman prefers full path
    image: localhost/references_flutter_devcontainer-dev

    depends_on:
      db:
        condition: service_started
    environment:
      HOME: /home/vscode
    # Use a user-defined network (see bottom) instead of slirp4netns network_mode.
    # slirp4netns has issues with DNS resolution, as it prioritizes IPv6, which still has some problems as of today.
    volumes:
      - type: bind
        source: "${WORKSPACE}"
        target: /workspace
        bind:
          selinux: "z"
    # Keep container alive under Podman (Debian base image would otherwise exit immediately).
    command: ["bash", "-lc", "while sleep 3600; do :; done"]

    # Avoid setgroups error with crun in rootless mode
    # TODO is this really necessary?
    security_opt:
      - no-new-privileges:true

    networks:
      devnet:
        aliases:
          - dev

    # Provide explicit DNS resolver behavior for this service. Applied here (instead of
    # network-level) for better compatibility with some Podman + compose implementations
    # that ignore network-level dns_opt.
    dns:
      - 8.8.8.8
      - 1.1.1.1
    dns_opt:
      - single-request
      - attempts:2
      - timeout:1

networks:
  devnet:
    driver: bridge

    # Provide explicit DNS servers & resolver behavior. This avoids glitches that would be introduced by slirp4netns.
    ipam:
      driver: default

# volumes:
#   db_data: {}
